// Mocks generated by Mockito 5.4.4 from annotations
// in meet_me/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i6;

import 'package:agora_rtc_engine/src/binding_forward_export.dart' as _i2;
import 'package:meet_me/src/auth/data/datasource/auth_datasource.dart' as _i7;
import 'package:meet_me/src/auth/domain/model/user_model.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSDKBuildInfo_0 extends _i1.SmartFake implements _i2.SDKBuildInfo {
  _FakeSDKBuildInfo_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFaceShapeBeautyOptions_1 extends _i1.SmartFake
    implements _i2.FaceShapeBeautyOptions {
  _FakeFaceShapeBeautyOptions_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFaceShapeAreaOptions_2 extends _i1.SmartFake
    implements _i2.FaceShapeAreaOptions {
  _FakeFaceShapeAreaOptions_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeviceInfo_3 extends _i1.SmartFake implements _i2.DeviceInfo {
  _FakeDeviceInfo_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserInfo_4 extends _i1.SmartFake implements _i2.UserInfo {
  _FakeUserInfo_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAudioDeviceManager_5 extends _i1.SmartFake
    implements _i2.AudioDeviceManager {
  _FakeAudioDeviceManager_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVideoDeviceManager_6 extends _i1.SmartFake
    implements _i2.VideoDeviceManager {
  _FakeVideoDeviceManager_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMusicContentCenter_7 extends _i1.SmartFake
    implements _i2.MusicContentCenter {
  _FakeMusicContentCenter_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMediaEngine_8 extends _i1.SmartFake implements _i2.MediaEngine {
  _FakeMediaEngine_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocalSpatialAudioEngine_9 extends _i1.SmartFake
    implements _i2.LocalSpatialAudioEngine {
  _FakeLocalSpatialAudioEngine_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeH265Transcoder_10 extends _i1.SmartFake
    implements _i2.H265Transcoder {
  _FakeH265Transcoder_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_11 extends _i1.SmartFake implements _i3.UserModel {
  _FakeUserModel_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RtcEngine].
///
/// See the documentation for Mockito's code generation for more information.
class MockRtcEngine extends _i1.Mock implements _i2.RtcEngine {
  MockRtcEngine() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> initialize(_i2.RtcEngineContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [context],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.SDKBuildInfo> getVersion() => (super.noSuchMethod(
        Invocation.method(
          #getVersion,
          [],
        ),
        returnValue: _i4.Future<_i2.SDKBuildInfo>.value(_FakeSDKBuildInfo_0(
          this,
          Invocation.method(
            #getVersion,
            [],
          ),
        )),
      ) as _i4.Future<_i2.SDKBuildInfo>);

  @override
  _i4.Future<String> getErrorDescription(int? code) => (super.noSuchMethod(
        Invocation.method(
          #getErrorDescription,
          [code],
        ),
        returnValue: _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #getErrorDescription,
            [code],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<List<_i2.CodecCapInfo>> queryCodecCapability(int? size) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryCodecCapability,
          [size],
        ),
        returnValue:
            _i4.Future<List<_i2.CodecCapInfo>>.value(<_i2.CodecCapInfo>[]),
      ) as _i4.Future<List<_i2.CodecCapInfo>>);

  @override
  _i4.Future<int> queryDeviceScore() => (super.noSuchMethod(
        Invocation.method(
          #queryDeviceScore,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> preloadChannel({
    required String? token,
    required String? channelId,
    required int? uid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #preloadChannel,
          [],
          {
            #token: token,
            #channelId: channelId,
            #uid: uid,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> preloadChannelWithUserAccount({
    required String? token,
    required String? channelId,
    required String? userAccount,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #preloadChannelWithUserAccount,
          [],
          {
            #token: token,
            #channelId: channelId,
            #userAccount: userAccount,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updatePreloadChannelToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePreloadChannelToken,
          [token],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> joinChannel({
    required String? token,
    required String? channelId,
    required int? uid,
    required _i2.ChannelMediaOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinChannel,
          [],
          {
            #token: token,
            #channelId: channelId,
            #uid: uid,
            #options: options,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateChannelMediaOptions(
          _i2.ChannelMediaOptions? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateChannelMediaOptions,
          [options],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> leaveChannel({_i2.LeaveChannelOptions? options}) =>
      (super.noSuchMethod(
        Invocation.method(
          #leaveChannel,
          [],
          {#options: options},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> renewToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #renewToken,
          [token],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setChannelProfile(_i2.ChannelProfileType? profile) =>
      (super.noSuchMethod(
        Invocation.method(
          #setChannelProfile,
          [profile],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setClientRole({
    required _i2.ClientRoleType? role,
    _i2.ClientRoleOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setClientRole,
          [],
          {
            #role: role,
            #options: options,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startEchoTest(_i2.EchoTestConfiguration? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #startEchoTest,
          [config],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopEchoTest() => (super.noSuchMethod(
        Invocation.method(
          #stopEchoTest,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableMultiCamera({
    required bool? enabled,
    required _i2.CameraCapturerConfiguration? config,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableMultiCamera,
          [],
          {
            #enabled: enabled,
            #config: config,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableVideo() => (super.noSuchMethod(
        Invocation.method(
          #enableVideo,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> disableVideo() => (super.noSuchMethod(
        Invocation.method(
          #disableVideo,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startPreview(
          {_i2.VideoSourceType? sourceType =
              _i2.VideoSourceType.videoSourceCameraPrimary}) =>
      (super.noSuchMethod(
        Invocation.method(
          #startPreview,
          [],
          {#sourceType: sourceType},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopPreview(
          {_i2.VideoSourceType? sourceType =
              _i2.VideoSourceType.videoSourceCameraPrimary}) =>
      (super.noSuchMethod(
        Invocation.method(
          #stopPreview,
          [],
          {#sourceType: sourceType},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startLastmileProbeTest(_i2.LastmileProbeConfig? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #startLastmileProbeTest,
          [config],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopLastmileProbeTest() => (super.noSuchMethod(
        Invocation.method(
          #stopLastmileProbeTest,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setVideoEncoderConfiguration(
          _i2.VideoEncoderConfiguration? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #setVideoEncoderConfiguration,
          [config],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setBeautyEffectOptions({
    required bool? enabled,
    required _i2.BeautyOptions? options,
    _i2.MediaSourceType? type = _i2.MediaSourceType.primaryCameraSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBeautyEffectOptions,
          [],
          {
            #enabled: enabled,
            #options: options,
            #type: type,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setFaceShapeBeautyOptions({
    required bool? enabled,
    required _i2.FaceShapeBeautyOptions? options,
    _i2.MediaSourceType? type = _i2.MediaSourceType.primaryCameraSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFaceShapeBeautyOptions,
          [],
          {
            #enabled: enabled,
            #options: options,
            #type: type,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setFaceShapeAreaOptions({
    required _i2.FaceShapeAreaOptions? options,
    _i2.MediaSourceType? type = _i2.MediaSourceType.primaryCameraSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFaceShapeAreaOptions,
          [],
          {
            #options: options,
            #type: type,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.FaceShapeBeautyOptions> getFaceShapeBeautyOptions(
          {_i2.MediaSourceType? type =
              _i2.MediaSourceType.primaryCameraSource}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFaceShapeBeautyOptions,
          [],
          {#type: type},
        ),
        returnValue: _i4.Future<_i2.FaceShapeBeautyOptions>.value(
            _FakeFaceShapeBeautyOptions_1(
          this,
          Invocation.method(
            #getFaceShapeBeautyOptions,
            [],
            {#type: type},
          ),
        )),
      ) as _i4.Future<_i2.FaceShapeBeautyOptions>);

  @override
  _i4.Future<_i2.FaceShapeAreaOptions> getFaceShapeAreaOptions({
    required _i2.FaceShapeArea? shapeArea,
    _i2.MediaSourceType? type = _i2.MediaSourceType.primaryCameraSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFaceShapeAreaOptions,
          [],
          {
            #shapeArea: shapeArea,
            #type: type,
          },
        ),
        returnValue: _i4.Future<_i2.FaceShapeAreaOptions>.value(
            _FakeFaceShapeAreaOptions_2(
          this,
          Invocation.method(
            #getFaceShapeAreaOptions,
            [],
            {
              #shapeArea: shapeArea,
              #type: type,
            },
          ),
        )),
      ) as _i4.Future<_i2.FaceShapeAreaOptions>);

  @override
  _i4.Future<void> setFilterEffectOptions({
    required bool? enabled,
    required _i2.FilterEffectOptions? options,
    _i2.MediaSourceType? type = _i2.MediaSourceType.primaryCameraSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFilterEffectOptions,
          [],
          {
            #enabled: enabled,
            #options: options,
            #type: type,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLowlightEnhanceOptions({
    required bool? enabled,
    required _i2.LowlightEnhanceOptions? options,
    _i2.MediaSourceType? type = _i2.MediaSourceType.primaryCameraSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLowlightEnhanceOptions,
          [],
          {
            #enabled: enabled,
            #options: options,
            #type: type,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setVideoDenoiserOptions({
    required bool? enabled,
    required _i2.VideoDenoiserOptions? options,
    _i2.MediaSourceType? type = _i2.MediaSourceType.primaryCameraSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setVideoDenoiserOptions,
          [],
          {
            #enabled: enabled,
            #options: options,
            #type: type,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setColorEnhanceOptions({
    required bool? enabled,
    required _i2.ColorEnhanceOptions? options,
    _i2.MediaSourceType? type = _i2.MediaSourceType.primaryCameraSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setColorEnhanceOptions,
          [],
          {
            #enabled: enabled,
            #options: options,
            #type: type,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableVirtualBackground({
    required bool? enabled,
    required _i2.VirtualBackgroundSource? backgroundSource,
    required _i2.SegmentationProperty? segproperty,
    _i2.MediaSourceType? type = _i2.MediaSourceType.primaryCameraSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableVirtualBackground,
          [],
          {
            #enabled: enabled,
            #backgroundSource: backgroundSource,
            #segproperty: segproperty,
            #type: type,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setupRemoteVideo(_i2.VideoCanvas? canvas) =>
      (super.noSuchMethod(
        Invocation.method(
          #setupRemoteVideo,
          [canvas],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setupLocalVideo(_i2.VideoCanvas? canvas) =>
      (super.noSuchMethod(
        Invocation.method(
          #setupLocalVideo,
          [canvas],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setVideoScenario(
          _i2.VideoApplicationScenarioType? scenarioType) =>
      (super.noSuchMethod(
        Invocation.method(
          #setVideoScenario,
          [scenarioType],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setVideoQoEPreference(
          _i2.VideoQoePreferenceType? qoePreference) =>
      (super.noSuchMethod(
        Invocation.method(
          #setVideoQoEPreference,
          [qoePreference],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableAudio() => (super.noSuchMethod(
        Invocation.method(
          #enableAudio,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> disableAudio() => (super.noSuchMethod(
        Invocation.method(
          #disableAudio,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setAudioProfile({
    required _i2.AudioProfileType? profile,
    _i2.AudioScenarioType? scenario =
        _i2.AudioScenarioType.audioScenarioDefault,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAudioProfile,
          [],
          {
            #profile: profile,
            #scenario: scenario,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setAudioScenario(_i2.AudioScenarioType? scenario) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAudioScenario,
          [scenario],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableLocalAudio(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #enableLocalAudio,
          [enabled],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> muteLocalAudioStream(bool? mute) => (super.noSuchMethod(
        Invocation.method(
          #muteLocalAudioStream,
          [mute],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> muteAllRemoteAudioStreams(bool? mute) => (super.noSuchMethod(
        Invocation.method(
          #muteAllRemoteAudioStreams,
          [mute],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> muteRemoteAudioStream({
    required int? uid,
    required bool? mute,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #muteRemoteAudioStream,
          [],
          {
            #uid: uid,
            #mute: mute,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> muteLocalVideoStream(bool? mute) => (super.noSuchMethod(
        Invocation.method(
          #muteLocalVideoStream,
          [mute],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableLocalVideo(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #enableLocalVideo,
          [enabled],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> muteAllRemoteVideoStreams(bool? mute) => (super.noSuchMethod(
        Invocation.method(
          #muteAllRemoteVideoStreams,
          [mute],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setRemoteDefaultVideoStreamType(
          _i2.VideoStreamType? streamType) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRemoteDefaultVideoStreamType,
          [streamType],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> muteRemoteVideoStream({
    required int? uid,
    required bool? mute,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #muteRemoteVideoStream,
          [],
          {
            #uid: uid,
            #mute: mute,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setRemoteVideoStreamType({
    required int? uid,
    required _i2.VideoStreamType? streamType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRemoteVideoStreamType,
          [],
          {
            #uid: uid,
            #streamType: streamType,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setRemoteVideoSubscriptionOptions({
    required int? uid,
    required _i2.VideoSubscriptionOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRemoteVideoSubscriptionOptions,
          [],
          {
            #uid: uid,
            #options: options,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setSubscribeAudioBlocklist({
    required List<int>? uidList,
    required int? uidNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSubscribeAudioBlocklist,
          [],
          {
            #uidList: uidList,
            #uidNumber: uidNumber,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setSubscribeAudioAllowlist({
    required List<int>? uidList,
    required int? uidNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSubscribeAudioAllowlist,
          [],
          {
            #uidList: uidList,
            #uidNumber: uidNumber,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setSubscribeVideoBlocklist({
    required List<int>? uidList,
    required int? uidNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSubscribeVideoBlocklist,
          [],
          {
            #uidList: uidList,
            #uidNumber: uidNumber,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setSubscribeVideoAllowlist({
    required List<int>? uidList,
    required int? uidNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSubscribeVideoAllowlist,
          [],
          {
            #uidList: uidList,
            #uidNumber: uidNumber,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableAudioVolumeIndication({
    required int? interval,
    required int? smooth,
    required bool? reportVad,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableAudioVolumeIndication,
          [],
          {
            #interval: interval,
            #smooth: smooth,
            #reportVad: reportVad,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startAudioRecording(
          _i2.AudioRecordingConfiguration? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAudioRecording,
          [config],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void registerAudioEncodedFrameObserver({
    required _i2.AudioEncodedFrameObserverConfig? config,
    required _i2.AudioEncodedFrameObserver? observer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerAudioEncodedFrameObserver,
          [],
          {
            #config: config,
            #observer: observer,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> stopAudioRecording() => (super.noSuchMethod(
        Invocation.method(
          #stopAudioRecording,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.MediaPlayer?> createMediaPlayer() => (super.noSuchMethod(
        Invocation.method(
          #createMediaPlayer,
          [],
        ),
        returnValue: _i4.Future<_i2.MediaPlayer?>.value(),
      ) as _i4.Future<_i2.MediaPlayer?>);

  @override
  _i4.Future<void> destroyMediaPlayer(_i2.MediaPlayer? mediaPlayer) =>
      (super.noSuchMethod(
        Invocation.method(
          #destroyMediaPlayer,
          [mediaPlayer],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.MediaRecorder?> createMediaRecorder(
          _i2.RecorderStreamInfo? info) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMediaRecorder,
          [info],
        ),
        returnValue: _i4.Future<_i2.MediaRecorder?>.value(),
      ) as _i4.Future<_i2.MediaRecorder?>);

  @override
  _i4.Future<void> destroyMediaRecorder(_i2.MediaRecorder? mediaRecorder) =>
      (super.noSuchMethod(
        Invocation.method(
          #destroyMediaRecorder,
          [mediaRecorder],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startAudioMixing({
    required String? filePath,
    required bool? loopback,
    required int? cycle,
    int? startPos = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAudioMixing,
          [],
          {
            #filePath: filePath,
            #loopback: loopback,
            #cycle: cycle,
            #startPos: startPos,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopAudioMixing() => (super.noSuchMethod(
        Invocation.method(
          #stopAudioMixing,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> pauseAudioMixing() => (super.noSuchMethod(
        Invocation.method(
          #pauseAudioMixing,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> resumeAudioMixing() => (super.noSuchMethod(
        Invocation.method(
          #resumeAudioMixing,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> selectAudioTrack(int? index) => (super.noSuchMethod(
        Invocation.method(
          #selectAudioTrack,
          [index],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getAudioTrackCount() => (super.noSuchMethod(
        Invocation.method(
          #getAudioTrackCount,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> adjustAudioMixingVolume(int? volume) => (super.noSuchMethod(
        Invocation.method(
          #adjustAudioMixingVolume,
          [volume],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> adjustAudioMixingPublishVolume(int? volume) =>
      (super.noSuchMethod(
        Invocation.method(
          #adjustAudioMixingPublishVolume,
          [volume],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getAudioMixingPublishVolume() => (super.noSuchMethod(
        Invocation.method(
          #getAudioMixingPublishVolume,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> adjustAudioMixingPlayoutVolume(int? volume) =>
      (super.noSuchMethod(
        Invocation.method(
          #adjustAudioMixingPlayoutVolume,
          [volume],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getAudioMixingPlayoutVolume() => (super.noSuchMethod(
        Invocation.method(
          #getAudioMixingPlayoutVolume,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<int> getAudioMixingDuration() => (super.noSuchMethod(
        Invocation.method(
          #getAudioMixingDuration,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<int> getAudioMixingCurrentPosition() => (super.noSuchMethod(
        Invocation.method(
          #getAudioMixingCurrentPosition,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> setAudioMixingPosition(int? pos) => (super.noSuchMethod(
        Invocation.method(
          #setAudioMixingPosition,
          [pos],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setAudioMixingDualMonoMode(
          _i2.AudioMixingDualMonoMode? mode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAudioMixingDualMonoMode,
          [mode],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setAudioMixingPitch(int? pitch) => (super.noSuchMethod(
        Invocation.method(
          #setAudioMixingPitch,
          [pitch],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setAudioMixingPlaybackSpeed(int? speed) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAudioMixingPlaybackSpeed,
          [speed],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getEffectsVolume() => (super.noSuchMethod(
        Invocation.method(
          #getEffectsVolume,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> setEffectsVolume(int? volume) => (super.noSuchMethod(
        Invocation.method(
          #setEffectsVolume,
          [volume],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> preloadEffect({
    required int? soundId,
    required String? filePath,
    int? startPos = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #preloadEffect,
          [],
          {
            #soundId: soundId,
            #filePath: filePath,
            #startPos: startPos,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> playEffect({
    required int? soundId,
    required String? filePath,
    required int? loopCount,
    required double? pitch,
    required double? pan,
    required int? gain,
    bool? publish = false,
    int? startPos = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #playEffect,
          [],
          {
            #soundId: soundId,
            #filePath: filePath,
            #loopCount: loopCount,
            #pitch: pitch,
            #pan: pan,
            #gain: gain,
            #publish: publish,
            #startPos: startPos,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> playAllEffects({
    required int? loopCount,
    required double? pitch,
    required double? pan,
    required int? gain,
    bool? publish = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #playAllEffects,
          [],
          {
            #loopCount: loopCount,
            #pitch: pitch,
            #pan: pan,
            #gain: gain,
            #publish: publish,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getVolumeOfEffect(int? soundId) => (super.noSuchMethod(
        Invocation.method(
          #getVolumeOfEffect,
          [soundId],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> setVolumeOfEffect({
    required int? soundId,
    required int? volume,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setVolumeOfEffect,
          [],
          {
            #soundId: soundId,
            #volume: volume,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> pauseEffect(int? soundId) => (super.noSuchMethod(
        Invocation.method(
          #pauseEffect,
          [soundId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> pauseAllEffects() => (super.noSuchMethod(
        Invocation.method(
          #pauseAllEffects,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> resumeEffect(int? soundId) => (super.noSuchMethod(
        Invocation.method(
          #resumeEffect,
          [soundId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> resumeAllEffects() => (super.noSuchMethod(
        Invocation.method(
          #resumeAllEffects,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopEffect(int? soundId) => (super.noSuchMethod(
        Invocation.method(
          #stopEffect,
          [soundId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopAllEffects() => (super.noSuchMethod(
        Invocation.method(
          #stopAllEffects,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> unloadEffect(int? soundId) => (super.noSuchMethod(
        Invocation.method(
          #unloadEffect,
          [soundId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> unloadAllEffects() => (super.noSuchMethod(
        Invocation.method(
          #unloadAllEffects,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getEffectDuration(String? filePath) => (super.noSuchMethod(
        Invocation.method(
          #getEffectDuration,
          [filePath],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> setEffectPosition({
    required int? soundId,
    required int? pos,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setEffectPosition,
          [],
          {
            #soundId: soundId,
            #pos: pos,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getEffectCurrentPosition(int? soundId) => (super.noSuchMethod(
        Invocation.method(
          #getEffectCurrentPosition,
          [soundId],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> enableSoundPositionIndication(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableSoundPositionIndication,
          [enabled],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setRemoteVoicePosition({
    required int? uid,
    required double? pan,
    required double? gain,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRemoteVoicePosition,
          [],
          {
            #uid: uid,
            #pan: pan,
            #gain: gain,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableSpatialAudio(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #enableSpatialAudio,
          [enabled],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setRemoteUserSpatialAudioParams({
    required int? uid,
    required _i2.SpatialAudioParams? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRemoteUserSpatialAudioParams,
          [],
          {
            #uid: uid,
            #params: params,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setVoiceBeautifierPreset(
          _i2.VoiceBeautifierPreset? preset) =>
      (super.noSuchMethod(
        Invocation.method(
          #setVoiceBeautifierPreset,
          [preset],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setAudioEffectPreset(_i2.AudioEffectPreset? preset) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAudioEffectPreset,
          [preset],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setVoiceConversionPreset(
          _i2.VoiceConversionPreset? preset) =>
      (super.noSuchMethod(
        Invocation.method(
          #setVoiceConversionPreset,
          [preset],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setAudioEffectParameters({
    required _i2.AudioEffectPreset? preset,
    required int? param1,
    required int? param2,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAudioEffectParameters,
          [],
          {
            #preset: preset,
            #param1: param1,
            #param2: param2,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setVoiceBeautifierParameters({
    required _i2.VoiceBeautifierPreset? preset,
    required int? param1,
    required int? param2,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setVoiceBeautifierParameters,
          [],
          {
            #preset: preset,
            #param1: param1,
            #param2: param2,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setVoiceConversionParameters({
    required _i2.VoiceConversionPreset? preset,
    required int? param1,
    required int? param2,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setVoiceConversionParameters,
          [],
          {
            #preset: preset,
            #param1: param1,
            #param2: param2,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLocalVoicePitch(double? pitch) => (super.noSuchMethod(
        Invocation.method(
          #setLocalVoicePitch,
          [pitch],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLocalVoiceFormant(double? formantRatio) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLocalVoiceFormant,
          [formantRatio],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLocalVoiceEqualization({
    required _i2.AudioEqualizationBandFrequency? bandFrequency,
    required int? bandGain,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLocalVoiceEqualization,
          [],
          {
            #bandFrequency: bandFrequency,
            #bandGain: bandGain,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLocalVoiceReverb({
    required _i2.AudioReverbType? reverbKey,
    required int? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLocalVoiceReverb,
          [],
          {
            #reverbKey: reverbKey,
            #value: value,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setHeadphoneEQPreset(_i2.HeadphoneEqualizerPreset? preset) =>
      (super.noSuchMethod(
        Invocation.method(
          #setHeadphoneEQPreset,
          [preset],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setHeadphoneEQParameters({
    required int? lowGain,
    required int? highGain,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setHeadphoneEQParameters,
          [],
          {
            #lowGain: lowGain,
            #highGain: highGain,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableVoiceAITuner({
    required bool? enabled,
    required _i2.VoiceAiTunerType? type,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableVoiceAITuner,
          [],
          {
            #enabled: enabled,
            #type: type,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLogFile(String? filePath) => (super.noSuchMethod(
        Invocation.method(
          #setLogFile,
          [filePath],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLogFilter(_i2.LogFilterType? filter) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLogFilter,
          [filter],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLogLevel(_i2.LogLevel? level) => (super.noSuchMethod(
        Invocation.method(
          #setLogLevel,
          [level],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLogFileSize(int? fileSizeInKBytes) => (super.noSuchMethod(
        Invocation.method(
          #setLogFileSize,
          [fileSizeInKBytes],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String> uploadLogFile() => (super.noSuchMethod(
        Invocation.method(
          #uploadLogFile,
          [],
        ),
        returnValue: _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #uploadLogFile,
            [],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<void> writeLog({
    required _i2.LogLevel? level,
    required String? fmt,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeLog,
          [],
          {
            #level: level,
            #fmt: fmt,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLocalRenderMode({
    required _i2.RenderModeType? renderMode,
    _i2.VideoMirrorModeType? mirrorMode =
        _i2.VideoMirrorModeType.videoMirrorModeAuto,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLocalRenderMode,
          [],
          {
            #renderMode: renderMode,
            #mirrorMode: mirrorMode,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setRemoteRenderMode({
    required int? uid,
    required _i2.RenderModeType? renderMode,
    required _i2.VideoMirrorModeType? mirrorMode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRemoteRenderMode,
          [],
          {
            #uid: uid,
            #renderMode: renderMode,
            #mirrorMode: mirrorMode,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLocalRenderTargetFps({
    required _i2.VideoSourceType? sourceType,
    required int? targetFps,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLocalRenderTargetFps,
          [],
          {
            #sourceType: sourceType,
            #targetFps: targetFps,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setRemoteRenderTargetFps(int? targetFps) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRemoteRenderTargetFps,
          [targetFps],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLocalVideoMirrorMode(
          _i2.VideoMirrorModeType? mirrorMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLocalVideoMirrorMode,
          [mirrorMode],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableDualStreamMode({
    required bool? enabled,
    _i2.SimulcastStreamConfig? streamConfig,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableDualStreamMode,
          [],
          {
            #enabled: enabled,
            #streamConfig: streamConfig,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setDualStreamMode({
    required _i2.SimulcastStreamMode? mode,
    _i2.SimulcastStreamConfig? streamConfig,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDualStreamMode,
          [],
          {
            #mode: mode,
            #streamConfig: streamConfig,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setSimulcastConfig(_i2.SimulcastConfig? simulcastConfig) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSimulcastConfig,
          [simulcastConfig],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableCustomAudioLocalPlayback({
    required int? trackId,
    required bool? enabled,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableCustomAudioLocalPlayback,
          [],
          {
            #trackId: trackId,
            #enabled: enabled,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setRecordingAudioFrameParameters({
    required int? sampleRate,
    required int? channel,
    required _i2.RawAudioFrameOpModeType? mode,
    required int? samplesPerCall,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRecordingAudioFrameParameters,
          [],
          {
            #sampleRate: sampleRate,
            #channel: channel,
            #mode: mode,
            #samplesPerCall: samplesPerCall,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setPlaybackAudioFrameParameters({
    required int? sampleRate,
    required int? channel,
    required _i2.RawAudioFrameOpModeType? mode,
    required int? samplesPerCall,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPlaybackAudioFrameParameters,
          [],
          {
            #sampleRate: sampleRate,
            #channel: channel,
            #mode: mode,
            #samplesPerCall: samplesPerCall,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setMixedAudioFrameParameters({
    required int? sampleRate,
    required int? channel,
    required int? samplesPerCall,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setMixedAudioFrameParameters,
          [],
          {
            #sampleRate: sampleRate,
            #channel: channel,
            #samplesPerCall: samplesPerCall,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setEarMonitoringAudioFrameParameters({
    required int? sampleRate,
    required int? channel,
    required _i2.RawAudioFrameOpModeType? mode,
    required int? samplesPerCall,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setEarMonitoringAudioFrameParameters,
          [],
          {
            #sampleRate: sampleRate,
            #channel: channel,
            #mode: mode,
            #samplesPerCall: samplesPerCall,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setPlaybackAudioFrameBeforeMixingParameters({
    required int? sampleRate,
    required int? channel,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPlaybackAudioFrameBeforeMixingParameters,
          [],
          {
            #sampleRate: sampleRate,
            #channel: channel,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableAudioSpectrumMonitor({int? intervalInMS = 100}) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableAudioSpectrumMonitor,
          [],
          {#intervalInMS: intervalInMS},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> disableAudioSpectrumMonitor() => (super.noSuchMethod(
        Invocation.method(
          #disableAudioSpectrumMonitor,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void registerAudioSpectrumObserver(_i2.AudioSpectrumObserver? observer) =>
      super.noSuchMethod(
        Invocation.method(
          #registerAudioSpectrumObserver,
          [observer],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAudioSpectrumObserver(_i2.AudioSpectrumObserver? observer) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterAudioSpectrumObserver,
          [observer],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> adjustRecordingSignalVolume(int? volume) =>
      (super.noSuchMethod(
        Invocation.method(
          #adjustRecordingSignalVolume,
          [volume],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> muteRecordingSignal(bool? mute) => (super.noSuchMethod(
        Invocation.method(
          #muteRecordingSignal,
          [mute],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> adjustPlaybackSignalVolume(int? volume) =>
      (super.noSuchMethod(
        Invocation.method(
          #adjustPlaybackSignalVolume,
          [volume],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> adjustUserPlaybackSignalVolume({
    required int? uid,
    required int? volume,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #adjustUserPlaybackSignalVolume,
          [],
          {
            #uid: uid,
            #volume: volume,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLocalPublishFallbackOption(
          _i2.StreamFallbackOptions? option) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLocalPublishFallbackOption,
          [option],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setRemoteSubscribeFallbackOption(
          _i2.StreamFallbackOptions? option) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRemoteSubscribeFallbackOption,
          [option],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setHighPriorityUserList({
    required List<int>? uidList,
    required int? uidNum,
    required _i2.StreamFallbackOptions? option,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setHighPriorityUserList,
          [],
          {
            #uidList: uidList,
            #uidNum: uidNum,
            #option: option,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableExtension({
    required String? provider,
    required String? extension,
    bool? enable = true,
    _i2.MediaSourceType? type = _i2.MediaSourceType.unknownMediaSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableExtension,
          [],
          {
            #provider: provider,
            #extension: extension,
            #enable: enable,
            #type: type,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setExtensionProperty({
    required String? provider,
    required String? extension,
    required String? key,
    required String? value,
    _i2.MediaSourceType? type = _i2.MediaSourceType.unknownMediaSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setExtensionProperty,
          [],
          {
            #provider: provider,
            #extension: extension,
            #key: key,
            #value: value,
            #type: type,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String> getExtensionProperty({
    required String? provider,
    required String? extension,
    required String? key,
    required int? bufLen,
    _i2.MediaSourceType? type = _i2.MediaSourceType.unknownMediaSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExtensionProperty,
          [],
          {
            #provider: provider,
            #extension: extension,
            #key: key,
            #bufLen: bufLen,
            #type: type,
          },
        ),
        returnValue: _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #getExtensionProperty,
            [],
            {
              #provider: provider,
              #extension: extension,
              #key: key,
              #bufLen: bufLen,
              #type: type,
            },
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<void> enableLoopbackRecording({
    required bool? enabled,
    String? deviceName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableLoopbackRecording,
          [],
          {
            #enabled: enabled,
            #deviceName: deviceName,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> adjustLoopbackSignalVolume(int? volume) =>
      (super.noSuchMethod(
        Invocation.method(
          #adjustLoopbackSignalVolume,
          [volume],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getLoopbackRecordingVolume() => (super.noSuchMethod(
        Invocation.method(
          #getLoopbackRecordingVolume,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> enableInEarMonitoring({
    required bool? enabled,
    required _i2.EarMonitoringFilterType? includeAudioFilters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableInEarMonitoring,
          [],
          {
            #enabled: enabled,
            #includeAudioFilters: includeAudioFilters,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setInEarMonitoringVolume(int? volume) => (super.noSuchMethod(
        Invocation.method(
          #setInEarMonitoringVolume,
          [volume],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> loadExtensionProvider({
    required String? path,
    bool? unloadAfterUse = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadExtensionProvider,
          [],
          {
            #path: path,
            #unloadAfterUse: unloadAfterUse,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setExtensionProviderProperty({
    required String? provider,
    required String? key,
    required String? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setExtensionProviderProperty,
          [],
          {
            #provider: provider,
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> registerExtension({
    required String? provider,
    required String? extension,
    _i2.MediaSourceType? type = _i2.MediaSourceType.unknownMediaSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerExtension,
          [],
          {
            #provider: provider,
            #extension: extension,
            #type: type,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCameraCapturerConfiguration(
          _i2.CameraCapturerConfiguration? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCameraCapturerConfiguration,
          [config],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> createCustomVideoTrack() => (super.noSuchMethod(
        Invocation.method(
          #createCustomVideoTrack,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<int> createCustomEncodedVideoTrack(
          _i2.SenderOptions? senderOption) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCustomEncodedVideoTrack,
          [senderOption],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> destroyCustomVideoTrack(int? videoTrackId) =>
      (super.noSuchMethod(
        Invocation.method(
          #destroyCustomVideoTrack,
          [videoTrackId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> destroyCustomEncodedVideoTrack(int? videoTrackId) =>
      (super.noSuchMethod(
        Invocation.method(
          #destroyCustomEncodedVideoTrack,
          [videoTrackId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> switchCamera() => (super.noSuchMethod(
        Invocation.method(
          #switchCamera,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> isCameraZoomSupported() => (super.noSuchMethod(
        Invocation.method(
          #isCameraZoomSupported,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> isCameraFaceDetectSupported() => (super.noSuchMethod(
        Invocation.method(
          #isCameraFaceDetectSupported,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> isCameraTorchSupported() => (super.noSuchMethod(
        Invocation.method(
          #isCameraTorchSupported,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> isCameraFocusSupported() => (super.noSuchMethod(
        Invocation.method(
          #isCameraFocusSupported,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> isCameraAutoFocusFaceModeSupported() => (super.noSuchMethod(
        Invocation.method(
          #isCameraAutoFocusFaceModeSupported,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> setCameraZoomFactor(double? factor) => (super.noSuchMethod(
        Invocation.method(
          #setCameraZoomFactor,
          [factor],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableFaceDetection(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #enableFaceDetection,
          [enabled],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<double> getCameraMaxZoomFactor() => (super.noSuchMethod(
        Invocation.method(
          #getCameraMaxZoomFactor,
          [],
        ),
        returnValue: _i4.Future<double>.value(0.0),
      ) as _i4.Future<double>);

  @override
  _i4.Future<void> setCameraFocusPositionInPreview({
    required double? positionX,
    required double? positionY,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCameraFocusPositionInPreview,
          [],
          {
            #positionX: positionX,
            #positionY: positionY,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCameraTorchOn(bool? isOn) => (super.noSuchMethod(
        Invocation.method(
          #setCameraTorchOn,
          [isOn],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCameraAutoFocusFaceModeEnabled(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCameraAutoFocusFaceModeEnabled,
          [enabled],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> isCameraExposurePositionSupported() => (super.noSuchMethod(
        Invocation.method(
          #isCameraExposurePositionSupported,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> setCameraExposurePosition({
    required double? positionXinView,
    required double? positionYinView,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCameraExposurePosition,
          [],
          {
            #positionXinView: positionXinView,
            #positionYinView: positionYinView,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> isCameraExposureSupported() => (super.noSuchMethod(
        Invocation.method(
          #isCameraExposureSupported,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> setCameraExposureFactor(double? factor) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCameraExposureFactor,
          [factor],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> isCameraAutoExposureFaceModeSupported() =>
      (super.noSuchMethod(
        Invocation.method(
          #isCameraAutoExposureFaceModeSupported,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> setCameraAutoExposureFaceModeEnabled(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCameraAutoExposureFaceModeEnabled,
          [enabled],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCameraStabilizationMode(
          _i2.CameraStabilizationMode? mode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCameraStabilizationMode,
          [mode],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setDefaultAudioRouteToSpeakerphone(bool? defaultToSpeaker) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDefaultAudioRouteToSpeakerphone,
          [defaultToSpeaker],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setEnableSpeakerphone(bool? speakerOn) =>
      (super.noSuchMethod(
        Invocation.method(
          #setEnableSpeakerphone,
          [speakerOn],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> isSpeakerphoneEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isSpeakerphoneEnabled,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> setRouteInCommunicationMode(int? route) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRouteInCommunicationMode,
          [route],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> isCameraCenterStageSupported() => (super.noSuchMethod(
        Invocation.method(
          #isCameraCenterStageSupported,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> enableCameraCenterStage(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableCameraCenterStage,
          [enabled],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i2.ScreenCaptureSourceInfo>> getScreenCaptureSources({
    required _i2.SIZE? thumbSize,
    required _i2.SIZE? iconSize,
    required bool? includeScreen,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getScreenCaptureSources,
          [],
          {
            #thumbSize: thumbSize,
            #iconSize: iconSize,
            #includeScreen: includeScreen,
          },
        ),
        returnValue: _i4.Future<List<_i2.ScreenCaptureSourceInfo>>.value(
            <_i2.ScreenCaptureSourceInfo>[]),
      ) as _i4.Future<List<_i2.ScreenCaptureSourceInfo>>);

  @override
  _i4.Future<void> setAudioSessionOperationRestriction(
          _i2.AudioSessionOperationRestriction? restriction) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAudioSessionOperationRestriction,
          [restriction],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startScreenCaptureByDisplayId({
    required int? displayId,
    required _i2.Rectangle? regionRect,
    required _i2.ScreenCaptureParameters? captureParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startScreenCaptureByDisplayId,
          [],
          {
            #displayId: displayId,
            #regionRect: regionRect,
            #captureParams: captureParams,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startScreenCaptureByScreenRect({
    required _i2.Rectangle? screenRect,
    required _i2.Rectangle? regionRect,
    required _i2.ScreenCaptureParameters? captureParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startScreenCaptureByScreenRect,
          [],
          {
            #screenRect: screenRect,
            #regionRect: regionRect,
            #captureParams: captureParams,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.DeviceInfo> getAudioDeviceInfo() => (super.noSuchMethod(
        Invocation.method(
          #getAudioDeviceInfo,
          [],
        ),
        returnValue: _i4.Future<_i2.DeviceInfo>.value(_FakeDeviceInfo_3(
          this,
          Invocation.method(
            #getAudioDeviceInfo,
            [],
          ),
        )),
      ) as _i4.Future<_i2.DeviceInfo>);

  @override
  _i4.Future<void> startScreenCaptureByWindowId({
    required int? windowId,
    required _i2.Rectangle? regionRect,
    required _i2.ScreenCaptureParameters? captureParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startScreenCaptureByWindowId,
          [],
          {
            #windowId: windowId,
            #regionRect: regionRect,
            #captureParams: captureParams,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setScreenCaptureContentHint(
          _i2.VideoContentHint? contentHint) =>
      (super.noSuchMethod(
        Invocation.method(
          #setScreenCaptureContentHint,
          [contentHint],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateScreenCaptureRegion(_i2.Rectangle? regionRect) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateScreenCaptureRegion,
          [regionRect],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateScreenCaptureParameters(
          _i2.ScreenCaptureParameters? captureParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateScreenCaptureParameters,
          [captureParams],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startScreenCapture(
          _i2.ScreenCaptureParameters2? captureParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #startScreenCapture,
          [captureParams],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateScreenCapture(
          _i2.ScreenCaptureParameters2? captureParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateScreenCapture,
          [captureParams],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> queryScreenCaptureCapability() => (super.noSuchMethod(
        Invocation.method(
          #queryScreenCaptureCapability,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<List<_i2.FocalLengthInfo>> queryCameraFocalLengthCapability() =>
      (super.noSuchMethod(
        Invocation.method(
          #queryCameraFocalLengthCapability,
          [],
        ),
        returnValue: _i4.Future<List<_i2.FocalLengthInfo>>.value(
            <_i2.FocalLengthInfo>[]),
      ) as _i4.Future<List<_i2.FocalLengthInfo>>);

  @override
  _i4.Future<void> setExternalMediaProjection(int? mediaProjection) =>
      (super.noSuchMethod(
        Invocation.method(
          #setExternalMediaProjection,
          [mediaProjection],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setScreenCaptureScenario(
          _i2.ScreenScenarioType? screenScenario) =>
      (super.noSuchMethod(
        Invocation.method(
          #setScreenCaptureScenario,
          [screenScenario],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopScreenCapture() => (super.noSuchMethod(
        Invocation.method(
          #stopScreenCapture,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String> getCallId() => (super.noSuchMethod(
        Invocation.method(
          #getCallId,
          [],
        ),
        returnValue: _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #getCallId,
            [],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<void> rate({
    required String? callId,
    required int? rating,
    required String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rate,
          [],
          {
            #callId: callId,
            #rating: rating,
            #description: description,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> complain({
    required String? callId,
    required String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #complain,
          [],
          {
            #callId: callId,
            #description: description,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startRtmpStreamWithoutTranscoding(String? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #startRtmpStreamWithoutTranscoding,
          [url],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startRtmpStreamWithTranscoding({
    required String? url,
    required _i2.LiveTranscoding? transcoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startRtmpStreamWithTranscoding,
          [],
          {
            #url: url,
            #transcoding: transcoding,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateRtmpTranscoding(_i2.LiveTranscoding? transcoding) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRtmpTranscoding,
          [transcoding],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startLocalVideoTranscoder(
          _i2.LocalTranscoderConfiguration? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #startLocalVideoTranscoder,
          [config],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateLocalTranscoderConfiguration(
          _i2.LocalTranscoderConfiguration? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLocalTranscoderConfiguration,
          [config],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopRtmpStream(String? url) => (super.noSuchMethod(
        Invocation.method(
          #stopRtmpStream,
          [url],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopLocalVideoTranscoder() => (super.noSuchMethod(
        Invocation.method(
          #stopLocalVideoTranscoder,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startLocalAudioMixer(
          _i2.LocalAudioMixerConfiguration? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #startLocalAudioMixer,
          [config],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateLocalAudioMixerConfiguration(
          _i2.LocalAudioMixerConfiguration? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLocalAudioMixerConfiguration,
          [config],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopLocalAudioMixer() => (super.noSuchMethod(
        Invocation.method(
          #stopLocalAudioMixer,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startCameraCapture({
    required _i2.VideoSourceType? sourceType,
    required _i2.CameraCapturerConfiguration? config,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startCameraCapture,
          [],
          {
            #sourceType: sourceType,
            #config: config,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopCameraCapture(_i2.VideoSourceType? sourceType) =>
      (super.noSuchMethod(
        Invocation.method(
          #stopCameraCapture,
          [sourceType],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCameraDeviceOrientation({
    required _i2.VideoSourceType? type,
    required _i2.VideoOrientation? orientation,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCameraDeviceOrientation,
          [],
          {
            #type: type,
            #orientation: orientation,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setScreenCaptureOrientation({
    required _i2.VideoSourceType? type,
    required _i2.VideoOrientation? orientation,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setScreenCaptureOrientation,
          [],
          {
            #type: type,
            #orientation: orientation,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.ConnectionStateType> getConnectionState() =>
      (super.noSuchMethod(
        Invocation.method(
          #getConnectionState,
          [],
        ),
        returnValue: _i4.Future<_i2.ConnectionStateType>.value(
            _i2.ConnectionStateType.connectionStateDisconnected),
      ) as _i4.Future<_i2.ConnectionStateType>);

  @override
  void registerEventHandler(_i2.RtcEngineEventHandler? eventHandler) =>
      super.noSuchMethod(
        Invocation.method(
          #registerEventHandler,
          [eventHandler],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterEventHandler(_i2.RtcEngineEventHandler? eventHandler) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterEventHandler,
          [eventHandler],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> setRemoteUserPriority({
    required int? uid,
    required _i2.PriorityType? userPriority,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRemoteUserPriority,
          [],
          {
            #uid: uid,
            #userPriority: userPriority,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableEncryption({
    required bool? enabled,
    required _i2.EncryptionConfig? config,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableEncryption,
          [],
          {
            #enabled: enabled,
            #config: config,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> createDataStream(_i2.DataStreamConfig? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #createDataStream,
          [config],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> sendStreamMessage({
    required int? streamId,
    required _i6.Uint8List? data,
    required int? length,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendStreamMessage,
          [],
          {
            #streamId: streamId,
            #data: data,
            #length: length,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> addVideoWatermark({
    required String? watermarkUrl,
    required _i2.WatermarkOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addVideoWatermark,
          [],
          {
            #watermarkUrl: watermarkUrl,
            #options: options,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clearVideoWatermarks() => (super.noSuchMethod(
        Invocation.method(
          #clearVideoWatermarks,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> pauseAudio() => (super.noSuchMethod(
        Invocation.method(
          #pauseAudio,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> resumeAudio() => (super.noSuchMethod(
        Invocation.method(
          #resumeAudio,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableWebSdkInteroperability(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableWebSdkInteroperability,
          [enabled],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> sendCustomReportMessage({
    required String? id,
    required String? category,
    required String? event,
    required String? label,
    required int? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendCustomReportMessage,
          [],
          {
            #id: id,
            #category: category,
            #event: event,
            #label: label,
            #value: value,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void registerMediaMetadataObserver({
    required _i2.MetadataObserver? observer,
    required _i2.MetadataType? type,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerMediaMetadataObserver,
          [],
          {
            #observer: observer,
            #type: type,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterMediaMetadataObserver({
    required _i2.MetadataObserver? observer,
    required _i2.MetadataType? type,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterMediaMetadataObserver,
          [],
          {
            #observer: observer,
            #type: type,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> startAudioFrameDump({
    required String? channelId,
    required int? uid,
    required String? location,
    required String? uuid,
    required String? passwd,
    required int? durationMs,
    required bool? autoUpload,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAudioFrameDump,
          [],
          {
            #channelId: channelId,
            #uid: uid,
            #location: location,
            #uuid: uuid,
            #passwd: passwd,
            #durationMs: durationMs,
            #autoUpload: autoUpload,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopAudioFrameDump({
    required String? channelId,
    required int? uid,
    required String? location,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #stopAudioFrameDump,
          [],
          {
            #channelId: channelId,
            #uid: uid,
            #location: location,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setAINSMode({
    required bool? enabled,
    required _i2.AudioAinsMode? mode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAINSMode,
          [],
          {
            #enabled: enabled,
            #mode: mode,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> registerLocalUserAccount({
    required String? appId,
    required String? userAccount,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerLocalUserAccount,
          [],
          {
            #appId: appId,
            #userAccount: userAccount,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> joinChannelWithUserAccount({
    required String? token,
    required String? channelId,
    required String? userAccount,
    _i2.ChannelMediaOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinChannelWithUserAccount,
          [],
          {
            #token: token,
            #channelId: channelId,
            #userAccount: userAccount,
            #options: options,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> joinChannelWithUserAccountEx({
    required String? token,
    required String? channelId,
    required String? userAccount,
    required _i2.ChannelMediaOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinChannelWithUserAccountEx,
          [],
          {
            #token: token,
            #channelId: channelId,
            #userAccount: userAccount,
            #options: options,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.UserInfo> getUserInfoByUserAccount(String? userAccount) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserInfoByUserAccount,
          [userAccount],
        ),
        returnValue: _i4.Future<_i2.UserInfo>.value(_FakeUserInfo_4(
          this,
          Invocation.method(
            #getUserInfoByUserAccount,
            [userAccount],
          ),
        )),
      ) as _i4.Future<_i2.UserInfo>);

  @override
  _i4.Future<_i2.UserInfo> getUserInfoByUid(int? uid) => (super.noSuchMethod(
        Invocation.method(
          #getUserInfoByUid,
          [uid],
        ),
        returnValue: _i4.Future<_i2.UserInfo>.value(_FakeUserInfo_4(
          this,
          Invocation.method(
            #getUserInfoByUid,
            [uid],
          ),
        )),
      ) as _i4.Future<_i2.UserInfo>);

  @override
  _i4.Future<void> startOrUpdateChannelMediaRelay(
          _i2.ChannelMediaRelayConfiguration? configuration) =>
      (super.noSuchMethod(
        Invocation.method(
          #startOrUpdateChannelMediaRelay,
          [configuration],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopChannelMediaRelay() => (super.noSuchMethod(
        Invocation.method(
          #stopChannelMediaRelay,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> pauseAllChannelMediaRelay() => (super.noSuchMethod(
        Invocation.method(
          #pauseAllChannelMediaRelay,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> resumeAllChannelMediaRelay() => (super.noSuchMethod(
        Invocation.method(
          #resumeAllChannelMediaRelay,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setDirectCdnStreamingAudioConfiguration(
          _i2.AudioProfileType? profile) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDirectCdnStreamingAudioConfiguration,
          [profile],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setDirectCdnStreamingVideoConfiguration(
          _i2.VideoEncoderConfiguration? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDirectCdnStreamingVideoConfiguration,
          [config],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startDirectCdnStreaming({
    required _i2.DirectCdnStreamingEventHandler? eventHandler,
    required String? publishUrl,
    required _i2.DirectCdnStreamingMediaOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startDirectCdnStreaming,
          [],
          {
            #eventHandler: eventHandler,
            #publishUrl: publishUrl,
            #options: options,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopDirectCdnStreaming() => (super.noSuchMethod(
        Invocation.method(
          #stopDirectCdnStreaming,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateDirectCdnStreamingMediaOptions(
          _i2.DirectCdnStreamingMediaOptions? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDirectCdnStreamingMediaOptions,
          [options],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startRhythmPlayer({
    required String? sound1,
    required String? sound2,
    required _i2.AgoraRhythmPlayerConfig? config,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startRhythmPlayer,
          [],
          {
            #sound1: sound1,
            #sound2: sound2,
            #config: config,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopRhythmPlayer() => (super.noSuchMethod(
        Invocation.method(
          #stopRhythmPlayer,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> configRhythmPlayer(_i2.AgoraRhythmPlayerConfig? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #configRhythmPlayer,
          [config],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> takeSnapshot({
    required int? uid,
    required String? filePath,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #takeSnapshot,
          [],
          {
            #uid: uid,
            #filePath: filePath,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableContentInspect({
    required bool? enabled,
    required _i2.ContentInspectConfig? config,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableContentInspect,
          [],
          {
            #enabled: enabled,
            #config: config,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> adjustCustomAudioPublishVolume({
    required int? trackId,
    required int? volume,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #adjustCustomAudioPublishVolume,
          [],
          {
            #trackId: trackId,
            #volume: volume,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> adjustCustomAudioPlayoutVolume({
    required int? trackId,
    required int? volume,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #adjustCustomAudioPlayoutVolume,
          [],
          {
            #trackId: trackId,
            #volume: volume,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCloudProxy(_i2.CloudProxyType? proxyType) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCloudProxy,
          [proxyType],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLocalAccessPoint(
          _i2.LocalAccessPointConfiguration? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLocalAccessPoint,
          [config],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setAdvancedAudioOptions({
    required _i2.AdvancedAudioOptions? options,
    int? sourceType = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAdvancedAudioOptions,
          [],
          {
            #options: options,
            #sourceType: sourceType,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setAVSyncSource({
    required String? channelId,
    required int? uid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAVSyncSource,
          [],
          {
            #channelId: channelId,
            #uid: uid,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableVideoImageSource({
    required bool? enable,
    required _i2.ImageTrackOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableVideoImageSource,
          [],
          {
            #enable: enable,
            #options: options,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getCurrentMonotonicTimeInMs() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentMonotonicTimeInMs,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> enableWirelessAccelerate(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableWirelessAccelerate,
          [enabled],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getNetworkType() => (super.noSuchMethod(
        Invocation.method(
          #getNetworkType,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> setParameters(String? parameters) => (super.noSuchMethod(
        Invocation.method(
          #setParameters,
          [parameters],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startMediaRenderingTracing() => (super.noSuchMethod(
        Invocation.method(
          #startMediaRenderingTracing,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableInstantMediaRendering() => (super.noSuchMethod(
        Invocation.method(
          #enableInstantMediaRendering,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getNtpWallTimeInMs() => (super.noSuchMethod(
        Invocation.method(
          #getNtpWallTimeInMs,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<bool> isFeatureAvailableOnDevice(_i2.FeatureType? type) =>
      (super.noSuchMethod(
        Invocation.method(
          #isFeatureAvailableOnDevice,
          [type],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> sendAudioMetadata({
    required _i6.Uint8List? metadata,
    required int? length,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendAudioMetadata,
          [],
          {
            #metadata: metadata,
            #length: length,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.HdrCapability> queryHDRCapability(
          _i2.VideoModuleType? videoModule) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryHDRCapability,
          [videoModule],
        ),
        returnValue: _i4.Future<_i2.HdrCapability>.value(
            _i2.HdrCapability.hdrCapabilityUnknown),
      ) as _i4.Future<_i2.HdrCapability>);

  @override
  _i4.Future<void> startScreenCaptureBySourceType({
    required _i2.VideoSourceType? sourceType,
    required _i2.ScreenCaptureConfiguration? config,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startScreenCaptureBySourceType,
          [],
          {
            #sourceType: sourceType,
            #config: config,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stopScreenCaptureBySourceType(
          _i2.VideoSourceType? sourceType) =>
      (super.noSuchMethod(
        Invocation.method(
          #stopScreenCaptureBySourceType,
          [sourceType],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> release({bool? sync = false}) => (super.noSuchMethod(
        Invocation.method(
          #release,
          [],
          {#sync: sync},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startPreviewWithoutSourceType() => (super.noSuchMethod(
        Invocation.method(
          #startPreviewWithoutSourceType,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i2.AudioDeviceManager getAudioDeviceManager() => (super.noSuchMethod(
        Invocation.method(
          #getAudioDeviceManager,
          [],
        ),
        returnValue: _FakeAudioDeviceManager_5(
          this,
          Invocation.method(
            #getAudioDeviceManager,
            [],
          ),
        ),
      ) as _i2.AudioDeviceManager);

  @override
  _i2.VideoDeviceManager getVideoDeviceManager() => (super.noSuchMethod(
        Invocation.method(
          #getVideoDeviceManager,
          [],
        ),
        returnValue: _FakeVideoDeviceManager_6(
          this,
          Invocation.method(
            #getVideoDeviceManager,
            [],
          ),
        ),
      ) as _i2.VideoDeviceManager);

  @override
  _i2.MusicContentCenter getMusicContentCenter() => (super.noSuchMethod(
        Invocation.method(
          #getMusicContentCenter,
          [],
        ),
        returnValue: _FakeMusicContentCenter_7(
          this,
          Invocation.method(
            #getMusicContentCenter,
            [],
          ),
        ),
      ) as _i2.MusicContentCenter);

  @override
  _i2.MediaEngine getMediaEngine() => (super.noSuchMethod(
        Invocation.method(
          #getMediaEngine,
          [],
        ),
        returnValue: _FakeMediaEngine_8(
          this,
          Invocation.method(
            #getMediaEngine,
            [],
          ),
        ),
      ) as _i2.MediaEngine);

  @override
  _i2.LocalSpatialAudioEngine getLocalSpatialAudioEngine() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLocalSpatialAudioEngine,
          [],
        ),
        returnValue: _FakeLocalSpatialAudioEngine_9(
          this,
          Invocation.method(
            #getLocalSpatialAudioEngine,
            [],
          ),
        ),
      ) as _i2.LocalSpatialAudioEngine);

  @override
  _i2.H265Transcoder getH265Transcoder() => (super.noSuchMethod(
        Invocation.method(
          #getH265Transcoder,
          [],
        ),
        returnValue: _FakeH265Transcoder_10(
          this,
          Invocation.method(
            #getH265Transcoder,
            [],
          ),
        ),
      ) as _i2.H265Transcoder);

  @override
  _i4.Future<void> sendMetaData({
    required _i2.Metadata? metadata,
    required _i2.VideoSourceType? sourceType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMetaData,
          [],
          {
            #metadata: metadata,
            #sourceType: sourceType,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setMaxMetadataSize(int? size) => (super.noSuchMethod(
        Invocation.method(
          #setMaxMetadataSize,
          [size],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void unregisterAudioEncodedFrameObserver(
          _i2.AudioEncodedFrameObserver? observer) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterAudioEncodedFrameObserver,
          [observer],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<int> getNativeHandle() => (super.noSuchMethod(
        Invocation.method(
          #getNativeHandle,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> takeSnapshotWithConfig({
    required int? uid,
    required _i2.SnapshotConfig? config,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #takeSnapshotWithConfig,
          [],
          {
            #uid: uid,
            #config: config,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [AuthFirebaseDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthFirebaseDatasource extends _i1.Mock
    implements _i7.AuthFirebaseDatasource {
  MockAuthFirebaseDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i3.UserModel> signIn({
    required String? userName,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
          {
            #userName: userName,
            #password: password,
          },
        ),
        returnValue: _i4.Future<_i3.UserModel>.value(_FakeUserModel_11(
          this,
          Invocation.method(
            #signIn,
            [],
            {
              #userName: userName,
              #password: password,
            },
          ),
        )),
      ) as _i4.Future<_i3.UserModel>);

  @override
  _i4.Future<bool> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<_i3.UserModel> signUp({
    required String? userName,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
          {
            #userName: userName,
            #password: password,
          },
        ),
        returnValue: _i4.Future<_i3.UserModel>.value(_FakeUserModel_11(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #userName: userName,
              #password: password,
            },
          ),
        )),
      ) as _i4.Future<_i3.UserModel>);
}
